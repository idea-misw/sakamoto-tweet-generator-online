{"version":3,"sources":["App.js","reportWebVitals.js","index.js"],"names":["vocabs","vocab_advent19","vocab_advent20","graphs","graph_advent19","graph_advent20","getRandomIntWeighted","weights","sum","min","max","cumsum","map","value","randomInt","length","Math","ceil","floor","random","filter","getWeights","vocabIndex","vocab","graph","Array","fill","nextVocabIndices","i","getData","sumWeights","reduce","previousValue","currentValue","wordsAndWeights","push","sort","a","b","sortedWords","sortedWeights","labels","datasets","label","data","backgroundColor","Description","props","className","Usage","prop","RadioLabel","article","type","id","name","onChange","htmlFor","RadioForm","radioLabels","index","WordItem","word","WordList","wordItems","words","Generator","sampleClassName","resetClassName","onClick","onClickSample","onClickReset","height","LinkItem","link","href","url","title","LinkList","linkItems","links","Links","App","state","event","target","this","setState","bigram","indexOf","concat","handleChange","handleSample","handleReset","React","Component","reportWebVitals","onPerfEntry","Function","then","getCLS","getFID","getFCP","getLCP","getTTFB","Header","Footer","ReactDOM","render","StrictMode","document","getElementById"],"mappings":"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","file":"static/js/main.e3f95b90.chunk.js","sourcesContent":["import React from 'react';\nimport { Bar } from 'react-chartjs-2';\n// import logo from './logo.svg';\nimport './App.css';\n\n// function App() {\n//   return (\n//     <div className=\"App\">\n//       <header className=\"App-header\">\n//         <img src={logo} className=\"App-logo\" alt=\"logo\" />\n//         <p>\n//           Edit <code>src/App.js</code> and save to reload.\n//         </p>\n//         <a\n//           className=\"App-link\"\n//           href=\"https://reactjs.org\"\n//           target=\"_blank\"\n//           rel=\"noopener noreferrer\"\n//         >\n//           Learn React\n//         </a>\n//       </header>\n//     </div>\n//   );\n// }\n\nimport vocab_advent19 from './Hke7xT6Tr.vocab.json';\nimport graph_advent19 from './Hke7xT6Tr.graph.json';\nimport vocab_advent20 from './ryqcvcfjD.vocab.json';\nimport graph_advent20 from './ryqcvcfjD.graph.json';\n\nconst vocabs = {\n  'advent19': vocab_advent19,\n  'advent20': vocab_advent20\n};\nconst graphs = {\n  'advent19': graph_advent19,\n  'advent20': graph_advent20\n};\n\nfunction getRandomInt(min, max) {\n  min = Math.ceil(min);\n  max = Math.floor(max);\n  return Math.floor(Math.random() * (max - min)) + min;\n}\n\nfunction getRandomIntWeighted(weights) {\n  var cumsum = weights.map((sum => value => sum += value)(0));\n  var randomInt = getRandomInt(0, cumsum[cumsum.length - 1]);\n  return cumsum.filter(value => value <= randomInt).length;\n}\n\nfunction getWeights(vocabIndex, vocab, graph) {\n  var weights = Array(vocab.length).fill(0);\n  var nextVocabIndices = graph[vocabIndex];\n  for (var i = 0; i < nextVocabIndices.length; i++) {\n    weights[nextVocabIndices[i][0]] = nextVocabIndices[i][1];\n  }\n  return weights;\n}\n\nfunction getData(vocab, weights) {\n  var sumWeights = weights.reduce(\n    (previousValue, currentValue) => previousValue + currentValue,\n    0\n  );\n  \n  var wordsAndWeights = [];\n  for (var i = 0; i < vocab.length; i++) {\n    wordsAndWeights.push([vocab[i], weights[i]]);\n  }\n  \n  wordsAndWeights.sort((a, b) => b[1] - a[1]);\n  \n  var sortedWords = []\n  var sortedWeights = []\n  for (var i = 0; i < Math.min(5, vocab.length); i++) {\n      sortedWords.push(wordsAndWeights[i][0][1]);\n      sortedWeights.push(wordsAndWeights[i][1] / sumWeights);\n  }\n  \n  return {\n    labels: sortedWords,\n    datasets: [{\n      label: '確率',\n      data: sortedWeights,\n      backgroundColor: 'rgb(255, 99, 132)'\n    }]\n  };\n}\n\nfunction Description(props) {\n  return (\n    <section className=\"description\">\n      <h3>サカモトの記事をジェネレート！</h3>\n      <p>\n        あのサカモトツイートジェネレータがついにオンラインで登場します。\n      </p>\n      <p>\n        せっかくのジェネレータを手軽に試してみたい、という声が寄せられたり寄せられなかったりしました。\n        そこで今回はツイートに代わって記事を学習。\n        例によってサカモトっぽい文を生成してくれます。\n      </p>\n      <p>\n        これであなたもサカモトに・・・。\n      </p>\n    </section>\n  );\n}\n\nfunction Usage(prop) {\n  return (\n    <section className=\"usage\">\n      <h3>使い方</h3>\n      <p>\n        「学習記事選択」で学習したい記事を選択します。\n        記事については半角を全角に正規化し、形態素解析を行っています。\n      </p>\n      <p>\n        「サンプル」で次に来る単語をサンプリングします。\n        単語はtrigram言語モデルの分布からサンプリングされます。\n        なお単語の分布は棒グラフによって与えられます。\n        「リセット」で再び初めからサンプリングすることができます。\n      </p>\n    </section>\n  );\n}\n\nfunction RadioLabel(prop) {\n  const article = prop.article;\n  return (\n    <div className=\"radio-label\">\n      <input type=\"radio\" id={article.value} name=\"article\" value={article.value} onChange={prop.onChange} />\n      <label htmlFor={article.value}>\n        {article.label}\n      </label>\n    </div>\n  );\n}\n\nfunction RadioForm(prop) {\n  const articles = [\n    {\n      value: 'advent19',\n      label: 'アドカレ2019',\n    },\n    {\n      value: 'advent20',\n      label: 'アドカレ2020',\n    }\n  ];\n  const radioLabels = articles.map((article, index) =>\n    <RadioLabel key={index} article={article} onChange={prop.onChange} />\n  );\n  return (\n    <form className=\"radio-form\">\n      <span>\n        学習記事選択:\n      </span>\n      {radioLabels}\n    </form>\n  );\n}\n\nfunction WordItem(props) {\n  const word = props.word;\n  const className = \"word-item\" + (word === 'EOS' ? \" word-item--eos-token\" : \"\");\n  return (\n    <li className={className}>\n      {word}\n    </li>\n  );\n}\n\nfunction WordList(props) {\n  const words = props.words;\n  const wordItems = words.map((word, index) =>\n    <WordItem key={index} word={word} />\n  );\n  return (\n    <ul className=\"word-list\">\n      {wordItems}\n    </ul>\n  );\n}\n\nfunction Generator(props) {\n  const article = props.article;\n  const sampleClassName = \"button\" + (article === '' || props.words[props.words.length - 1] === 'EOS' ? \"\" : \" button--active\");\n  const resetClassName = \"button\" + (article === '' ? \"\" : \" button--active\");\n  return (\n    <section className=\"generator\">\n      <RadioForm onChange={props.onChange} />\n      <div className=\"buttons\">\n        <button className={sampleClassName} onClick={props.onClickSample}>\n          サンプル\n        </button>\n        <button className={resetClassName} onClick={props.onClickReset}>\n          リセット\n        </button>\n      </div>\n      <WordList words={props.words} />\n      <div className=\"chart\">\n        <Bar data={props.data} height={200} />\n      </div>\n    </section>\n  );\n}\n\nfunction LinkItem(props) {\n  const link = props.link;\n  return (\n    <li className=\"link-item\">\n      <a className=\"link-link\" href={link.url}>\n        {link.title}\n      </a>\n    </li>\n  );\n}\n\nfunction LinkList(props) {\n  const links = props.links;\n  const linkItems = links.map((link, index) =>\n    <LinkItem key={index} link={link} />\n  );\n  return (\n    <ul className=\"link-list\">\n      {linkItems}\n    </ul>\n  );\n}\n\nfunction Links(props) {\n  const links = [\n    {\n      url: 'https://idea-misw.hatenablog.com/entry/2020/12/16/000000',\n      title: '【再掲】サカモトツイートジェネレータ - 洞窟の比喩',\n    },\n    {\n      url: 'https://hackmd.io/@kA0OlUhGRNmJkK7Nnx4QaQ/Hke7xT6Tr',\n      title: '【提案】自分の側に『推し』がいたら人類は最強になるんじゃないの？ - HackMD'\n    },\n    {\n      url: 'https://hackmd.io/@kA0OlUhGRNmJkK7Nnx4QaQ/ryqcvcfjD',\n      title: 'もちもちハム祭り2020 インターネットスペシャル - HackMD'\n    }\n  ];\n  return (\n    <section className=\"links\">\n      <h3>関連リンク</h3>\n      <LinkList links={links} />\n    </section>\n  );\n}\n\nclass App extends React.Component {\n  constructor(props) {\n    super(props);\n    this.state = {\n      article: '',\n      vocab: [],\n      graph: [],\n      vocabIndex: 0,\n      weights: [],\n      words: [],\n      data: getData([], [])\n    };\n  }\n\n  handleChange(event) {\n    var article = event.target.value;\n    var vocab = vocabs[article];\n    var graph = graphs[article];\n    var weights = getWeights(0, vocab, graph)\n    this.setState({\n      article: article,\n      vocab: vocab,\n      graph: graph,\n      vocabIndex: 0,\n      weights: weights,\n      words: [],\n      data: getData(vocab, weights)\n    });\n  }\n\n  handleSample() {\n    if (this.state.article === '') {\n      return;\n    }\n    if (this.state.words[this.state.words.length - 1] === 'EOS') {\n      return;\n    }\n    var bigram = this.state.vocab[getRandomIntWeighted(this.state.weights)];\n\n    var word = bigram[1];\n    var vocabIndex = this.state.vocab.indexOf(bigram);\n    var weights = getWeights(vocabIndex, this.state.vocab, this.state.graph);\n\n    this.setState({\n      article: this.state.article,\n      vocab: this.state.vocab,\n      graph: this.state.graph,\n      vocabIndex: vocabIndex,\n      weights: weights,\n      words: this.state.words.concat(word),\n      data: getData(this.state.vocab, weights)\n    });\n  }\n\n  handleReset() {\n    if (this.state.article === '') {\n      return;\n    }\n    var weights = getWeights(0, this.state.vocab, this.state.graph)\n    this.setState({\n      article: this.state.article,\n      vocab: this.state.vocab,\n      graph: this.state.graph,\n      vocabIndex: 0,\n      weights: weights,\n      words: [],\n      data: getData(this.state.vocab, weights)\n    });\n  }\n\n  render() {\n    return (\n      <main>\n        <div className=\"container\">\n          <Description />\n          <Usage />\n          <Generator\n            article={this.state.article}\n            words={this.state.words}\n            data={this.state.data}\n            onChange={(event) => this.handleChange(event)}\n            onClickSample={() => this.handleSample()}\n            onClickReset={() => this.handleReset()}\n          />\n          <Links />\n        </div>\n      </main>\n    );\n  }\n}\n\nexport default App;\n","const reportWebVitals = onPerfEntry => {\n  if (onPerfEntry && onPerfEntry instanceof Function) {\n    import('web-vitals').then(({ getCLS, getFID, getFCP, getLCP, getTTFB }) => {\n      getCLS(onPerfEntry);\n      getFID(onPerfEntry);\n      getFCP(onPerfEntry);\n      getLCP(onPerfEntry);\n      getTTFB(onPerfEntry);\n    });\n  }\n};\n\nexport default reportWebVitals;\n","import React from 'react';\nimport ReactDOM from 'react-dom';\nimport './reset.css';\nimport './index.css';\nimport App from './App';\nimport reportWebVitals from './reportWebVitals';\n\nfunction Header() {\n  return (\n    <header>\n      <div className=\"container\">\n        <h1 className=\"title\">サカモトツイートジェネレータオンライン</h1>\n      </div>\n    </header>\n  )\n}\n\nfunction Footer() {\n  return (\n    <footer>\n      <div className=\"container\">\n        <p className=\"copyright\">© 2021 ΙΔΈΑ</p>\n      </div>\n    </footer>\n  )\n}\n\nReactDOM.render(\n  <React.StrictMode>\n    <Header />\n    <App />\n    <Footer />\n  </React.StrictMode>,\n  document.getElementById('root')\n);\n\n// If you want to start measuring performance in your app, pass a function\n// to log results (for example: reportWebVitals(console.log))\n// or send to an analytics endpoint. Learn more: https://bit.ly/CRA-vitals\nreportWebVitals();\n"],"sourceRoot":""}